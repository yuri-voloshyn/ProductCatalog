// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Api.Data;

namespace ProductCatalog.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCatalog.Api.Data.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttachedFileId");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(38);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<DateTimeOffset>("ModifyDate");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AttachedFileId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("ProductCatalog.Api.Data.Models.DataFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<string>("FileType")
                        .HasMaxLength(100);

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(38);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("ModifyDate");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("DataFile");
                });

            modelBuilder.Entity("ProductCatalog.Api.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreateDate");

                    b.Property<string>("Description");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(38);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("ModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ThumbnailImageId");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("ThumbnailImageId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductCatalog.Api.Data.Models.Comment", b =>
                {
                    b.HasOne("ProductCatalog.Api.Data.Models.DataFile", "AttachedFile")
                        .WithMany()
                        .HasForeignKey("AttachedFileId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductCatalog.Api.Data.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ProductCatalog.Api.Data.Models.Product", b =>
                {
                    b.HasOne("ProductCatalog.Api.Data.Models.DataFile", "ThumbnailImage")
                        .WithMany()
                        .HasForeignKey("ThumbnailImageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
